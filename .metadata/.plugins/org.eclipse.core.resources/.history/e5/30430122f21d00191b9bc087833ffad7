/*
 * pilha01.c
 *
 *  Created on: 21/01/2019
 *      Author: cristhian
 */


#include <stdio.h>
#include <stdlib.h>
#include "pilha01.h"

struct lista
{
	float info;
	struct lista* Link;
};

struct pilha
{
	Lista* LinkPrim;
};

Pilha* criar_pilha()
{
	Pilha* argPilha = (Pilha*)malloc(sizeof(Pilha));
	argPilha->LinkPrim = NULL;
	return argPilha;
}

void push(Pilha* argPilha, float v)
{
	Lista* n = (Lista*)malloc(sizeof(Lista));
	n->info = v;
	n->Link = argPilha->LinkPrim;
	argPilha->LinkPrim = n;
}

float pop(Pilha* argPilha)
{
	Lista* t;
	float v;
	if(vazia(argPilha))
	{
		printf("Pilha vazia\n");
		exit(1);
	}
	t = argPilha->LinkPrim;
	v = t->info;
	argPilha->LinkPrim = t->Link;
	free(t);
	return v;
}

int vazia(Pilha* argPilha)
{
	return (argPilha->LinkPrim == NULL);
}

void liberar(Pilha* argPilha)
{
	Lista* q = argPilha->LinkPrim;
	while(q != NULL)
	{
		Lista* t = q->Link;
		free(q);
		q = t;
	}
	free(argPilha);
}

float topo(Pilha* argPilha)
{
	if(vazia(argPilha))
	{
		printf("Pilha vazia\n");
		exit(1);
	}
	return argPilha->LinkPrim->info;
}
